# 题目描述

## 给你一个字符串 s，找到 s 中最长的回文子串。

## 示例描述

  输入：s = "babad"
  输出："bab"
  解释："aba" 同样是符合题意的答案。
  
  https://leetcode-cn.com/problems/longest-palindromic-substring/

## 解题思路
  
   中心扩散法：
   1. 回文分奇偶：
    * 奇数： <-i-> 向左向右找 直到 left != right 
    * 偶数： <-i, i+1-> 向左向右找 直到 left != right
    返回长度：right - left - 1
   2. 求字符串首尾字符的index
    * 获得start index: 从字符中间i来找左侧字符长度：Math.floor(len - 1 / 2) 在用i - Math.floor(len - 1 / 2) 
    * 获得end index:  从字符中间i来找侧右字符长度：Math.floor(len / 2) 再用i + Math.floor(len / 2)
   3. subString截取：
    * subString [start, end) 左闭右开 因此return s.substring(start, end + 1)

```javascript
  /**
   * @param {string} s
   * @return {string}
   */
   var longestPalindrome = function(s) {
      if(!s || s.length < 1) {
          return '';
      }
      let start = 0;
      let end = 0;
      for(let i = 0; i < s.length; i++) {
          const odd = expandCenter(s, i, i);
          const even = expandCenter(s, i, i+1);
          const len = Math.max(odd, even);
          if(len > end - start) {
              start = i - Math.floor((len - 1) / 2);
              end = i + Math.floor(len / 2);
          }
      }
      return s.substring(start, end + 1)
  };

  function expandCenter(s, left, right) {
      while(left >= 0 && right < s.length && s.charAt(left) == s.charAt(right)){
          --left;
          ++right;
      }
      return right - left - 1
  }

  console.log(longestPalindrome("cbbd"));
```
